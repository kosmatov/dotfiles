alias dcrun="docker-compose run"
alias rubocop="dexec_console rubocop $@"

function dc_console_container() {
  container=$(grep_dc_console_container)
  if [ -z "$container" ]; then
    docker-compose run -d console tail -F none
    sleep 5
    grep_dc_console_container
  else
    echo $container
  fi
}

function grep_dc_console_container() {
  docker-compose ps -a | grep console | grep Up | head -1 | cut -d' ' -f1
}

function dexec_console() {
  project_dir=$(dc_project_dir)
  (cd $(dc_workdir) && docker exec -ti -w /app/$project_dir $(echo $DEXEC_ARGV) $(dc_console_container) $@ && exit 1)
}

function dc_workdir() {
  [ -n "$(dc_project_dir)" ] && echo '..' || echo '.'
}

function dc_project_dir() {
  [ -f 'docker-compose.yml' ] && echo '' || echo $(basename $(pwd))
}

function vcr_env() {
  [ -n "$VCR$VCR_UP" ] && echo " -e VCR_UP=1"
}

function prof_env() {
  [ -n "$PROF" ] && echo " -e TEST_STACK_PROF=$PROF -e TEST_STACK_PROF_FORMAT=json"
}

function log_env() {
  [ -n "$LOG" ] && echo " -e LOG=$LOG"
}

function rspec() {
  project_dir=$(dc_project_dir)
  [ -z "$project_dir" ] && project_dir=$(echo $1 | cut -d/ -f1 | grep -v spec)
  cmd_args="$@"
  cmd_args="-e APP_ENV=test -e RACK_ENV=test$(log_env)$(prof_env)$(vcr_env) $(dc_console_container) bundle exec rspec "${cmd_args#$project_dir/}
  (cd $(dc_workdir) && docker exec -ti -w /app/$project_dir $(echo $cmd_args))
  [ -n "$(vcr_env)" ] && sudo chown -R $USER $(dc_workdir)/$project_dir/spec/cassettes
}

function psql() {
  docker exec -ti $(docker-compose ps | grep $(basename $(pwd))-db | head -1 | cut -d' ' -f1) psql $@
}

function bundle() {
  if [ "$1" = "all" ]; then
    echo "#!/bin/bash

    find ./ -maxdepth 2 -name Gemfile | {
      while read str; do
        dir=\$(dirname \$str)
        cd \$dir && echo -\\>\$(pwd) && bundle && [ \$dir = '.' ] || cd .. && echo \$(pwd)
      done
    }" > $(dc_workdir)/.bundle-script

    chmod a+x $(dc_workdir)/.bundle-script
    (cd $(dc_workdir) && dexec_console ./.bundle-script)
  else
    DEXEC_ARGV="-e APP_ENV=test -e RACK_ENV=test" dexec_console bundle $@
    sudo chown -R $USER $(dc_workdir)/$(dc_project_dir)
  fi
}

function rcop() {
  base_branch=$(git rev-parse --verify --symbolic -q develop || echo -n master)
  rcop_files=$(git diff origin/$base_branch..HEAD --name-only --diff-filter=dr | grep -E ".+\.rb")
  workdir=$(dc_workdir)
  echo "#!/bin/bash\necho \"$rcop_files\" | xargs bundle exec rubocop $@" > $workdir/.rcop-script
  chmod a+x $workdir/.rcop-script
  project_dir=$(dc_project_dir)
  (cd $(dc_workdir) && docker exec -i -w /app/$project_dir $(dc_console_container) ./.rcop-script && exit 1)
}
