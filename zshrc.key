export LOGNAME=key
export USER=key
export EDITOR=nvr\ -o

[ -z "$(where nvr)" ] && pip3 install neovim-remote

if [ -d ~/rbox ]; then
  alias box="cd ~/rbox && make enter"
fi
alias vim="nvim"
alias vf="git grep --open-files-in-pager=$EDITOR"

if [ -n "$(whereis docker-compose)" ]; then
  alias dcrun="docker-compose run --rm"
  alias dcdev="docker-compose -f docker-compose-dev.yml run"
  alias rubocop="dcrun -w /app console bundle exec rubocop -F $@"

  function rcop() {
    base_branch=$(git rev-parse --verify --symbolic -q develop || echo -n master)
    files=$(git diff $base_branch..HEAD --name-only --diff-filter=dr | grep -E \*rb)
    echo "#!/bin/bash\necho \"$files\" | xargs bundle exec rubocop $@" > .rubocop-inspect-files
    chmod a+x .rubocop-inspect-files
    dcrun -w /app console ./.rubocop-inspect-files
  }

  function rspec() {
    wdir=''
    vcr=''
    [ -f 'docker-compose.yml' ] || wdir=/$(basename $(pwd))
    [ -n "$VCR" ] && vcr=" -e VCR_UP=1"
    dcrun -w /app/$wdir -e RACK_ENV=test -e APP_ENV=test $(echo $vcr) console bundle exec rspec "$@"
  }

  function bundle() {
    wdir=''
    [ -f 'docker-compose.yml' ] || wdir=/$(basename $(pwd))
    dcrun -w /app$wdir -e RACK_ENV=test -e APP_ENV=test console bundle $@
  }
fi
